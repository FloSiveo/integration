PROMPT 0

DEFAULT botten

LABEL botten
   COM32 chain.c32
   APPEND hd0
root@pulse-maquette:/tftpboot/nbi_img# grub^C
root@pulse-maquette:/tftpboot/nbi_img# vi grub/grub.cfg
grub.cfg           grub.cfg_skeleton  
root@pulse-maquette:/tftpboot/nbi_img# cat grub/grub.cfg
# Created by gen-grub-efi-nb-menu! Do NOT edit unless you know what you are doing! 
set default=clonezilla-se-client
set timeout_style=menu
set timeout=7
set hidden_timeout_quiet=false
set graphic_bg=yes
# tftpd_opt can be tftpd_opt=tftp or tftpd_opt="tftp,$tftp_server_ip", e.g., tftpd_opt=tftp,192.168.66.254
set tftpd_opt=tftp
# "run_load_netboot" is the flag to avoid load_netboot to be run more than once.
#
function load_netboot {
  set prefix=($tftpd_opt)/grub
  echo "Grub CPU and platform: $grub_cpu, $grub_platform"
  echo 'Network status: '
  net_ls_cards
  net_ls_addr
  net_ls_routes
  # sleep 5
  
  if [ -s "$prefix/grub.cfg-drbl-$net_default_mac" ]; then
    echo "Loading config file $prefix/grub.cfg-drbl-$net_default_mac..."
    # Before using configfile to run another config file, set run_load_netboot
    # and export so that it will be honored in configfile.
    set run_load_netboot=no
    export run_load_netboot
    configfile $prefix/grub.cfg-drbl-$net_default_mac
  fi
  
  if [ -s "$prefix/grub.cfg-drbl-$net_default_ip" ]; then
    echo "Loading config file $prefix/grub.cfg-drbl-$net_default_ip..."
    # Before using configfile to run another config file, set run_load_netboot
    # and export so that it will be honored in configfile.
    set run_load_netboot=no
    export run_load_netboot
    configfile $prefix/grub.cfg-drbl-$net_default_ip
  fi
}
#
function load_gfxterm {
  set gfxmode=auto
  insmod efi_gop
  insmod efi_uga
  insmod gfxterm
  terminal_output gfxterm
}

# load_netboot should be run once, otherwise it will loop.
# i.e., for default grub.cfg, run load_netboot. 
# Otherwise (e.g., grub.cfg-drbl-192.168.37.3, grub.cfg-drbl-00:0c:29:1d:9a:d1) skip it.
if [ "$run_load_netboot" != "no" ]; then
  load_netboot
fi

# Somehow the grub2 from CentOS 7 will look for unicode.pf2.pf2 if using "loadfont unicode.pf2". While in Debian/Ubuntu it's OK to use "loadfont unicode.pf2".
if [ x"${graphic_bg}" = xyes ]; then
  if loadfont unicode; then
    load_gfxterm
  elif loadfont unicode.pf2; then
    load_gfxterm
  fi
fi
if background_image drblwp.png; then
  set color_normal=black/black
  set color_highlight=magenta/black
else
  set color_normal=cyan/blue
  set color_highlight=white/blue
fi

# Uncomment the following for serial console
# The command serial initializes the serial unit 0 with the speed 38400bps. 
# The serial unit 0 is usually called ‘COM1’. If COM2, use ‘--unit=1’ instead.
#serial --unit=0 --speed=38400
#terminal_input serial
#terminal_output serial

# Decide if the commands: linux/initrd (default) or linuxefi/initrdefi
set linux_cmd=linux
set initrd_cmd=initrd
export linux_cmd initrd_cmd
if [ "${grub_cpu}" = "x86_64" -o "${grub_cpu}" = "i386" ];then
  set linux_cmd=linuxefi
  set initrd_cmd=initrdefi
fi

menuentry "Ubuntu 22.04 Linux (DRBL mode, mostly local resources)" --id drbl-client {
  echo "Enter DRBL..."
  echo "Loading Linux kernel vmlinuz-pxe..."
  $linux_cmd vmlinuz-pxe devfs=nomount drblthincli=off selinux=0 drbl_bootp=$net_default_next_server quiet    
  echo "Loading initial ramdisk initrd-pxe.img..."
  $initrd_cmd initrd-pxe.img 
}

menuentry "Clonezilla: multicast restore 0646e1ba-06d0-11ee-b6b5-005056bac9cc to disk sda" --id clonezilla-se-client {
  echo "Enter Clonezilla..."
  echo 'Loading Linux kernel vmlinuz-pxe...'
  $linux_cmd vmlinuz-pxe devfs=nomount drblthincli=off selinux=0 quiet text 1 drbl_bootp=$net_default_next_server    
  echo 'Loading initial ramdisk initrd-pxe.img...'
  $initrd_cmd initrd-pxe.img
}

menuentry "Local operating system (if available)" --id local-disk {
  echo "Booting first local disk..."
  # Generate boot menu automatically
  configfile grub/boot-local-efi.cfg
  # If not chainloaded, definitely no uEFI boot loader was found.
  echo "No uEFI boot loader was found!"
  sleep 15
}

menuentry "Reboot" --id reboot {
  echo "System rebooting..."
  reboot
}

menuentry "Shutdown" --id shutdown {
  echo "System shutting down..."
  halt
}

menuentry 'uEFI firmware setup' 'uefi-firmware' {
  echo "Entering uEFI firmware setup..."
  insmod efifwsetup
  fwsetup
}

