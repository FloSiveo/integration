---

 - name: Get hostname
   shell: hostname -s
   register: result

 - name: set xmppDomain = 1
   set_fact:
     XMPP_DOMAIN: "{{ result.stdout }}"

 - name: set GUACAMOLE_ROOT_PASSWORD
   set_fact:
     GUACAMOLE_ROOT_PASSWORD: 'pwgen --secure 40 1'

 - stat:
     path: /etc/guacamole/guacamole.properties.bak
   register: stfile

 - name: shell
   shell: "/bin/cp /etc/guacamole/guacamole.properties /etc/guacamole/guacamole.properties.bak"
   when: stfile.stat.isreg is not defined

#drop database

 - name: DROP DATABASE
   shell: 'echo "DROP DATABASE IF EXISTS guacamole;" | mysql -u{{ DBADMINUSER }} -p{{ DBADMINPASSWD }}'
   when:
     - ansible_distribution != "CentOS"

 - name: DROP DATABASE
   shell: 'echo "DROP DATABASE IF EXISTS guacamole;" | mysql -u{{ DBADMINUSER }} -p{{ DBADMINPASSWD }}'
   when:
     - ansible_distribution == "CentOS"

#drop user

 - name: DROP USER
   shell: echo "DROP USER IF EXISTS 'guacamole'@'localhost';" | mysql -u{{ DBADMINUSER }} -p{{ DBADMINPASSWD }}
   when:
     - ansible_distribution != "CentOS"

 - name: DROP USER
   shell: echo "DELETE FROM mysql.user WHERE user='guacamole';" | mysql -u{{ DBADMINUSER }} -p{{ DBADMINPASSWD }}
   when:
     - ansible_distribution == "CentOS"

 - name: DROP USER
   shell: echo "FLUSH PRIVILEGES;" | mysql -u{{ DBADMINUSER }} -p{{ DBADMINPASSWD }}
   when:
     - ansible_distribution == "CentOS"

#create database

 - name: CREATE DATABASE
   shell: echo "CREATE DATABASE guacamole;" | -u{{ DBADMINUSER }} -p{{ DBADMINPASSWD }}
   when:
     - ansible_distribution != "CentOS"

 - name: CREATE DATABASE
   shell: echo "CREATE DATABASE guacamole;" | mysql -u{{ DBADMINUSER }} -p{{ DBADMINPASSWD }}
   when:
     - ansible_distribution == "CentOS"

#create user

 - name: CREATE USER
   shell: echo "CREATE USER 'guacamole'@'localhost' IDENTIFIED BY '{{ ROOT_PASSWORD }}';" | mysql -u{{ DBADMINUSER }} -p{{ DBADMINPASSWD }}
   when:
     - ansible_distribution != "CentOS"

 - name: CREATE USER
   shell: echo "CREATE USER 'guacamole'@'localhost' IDENTIFIED BY '{{ ROOT_PASSWORD }}';" | mysql -u{{ DBADMINUSER }} -p{{ DBADMINPASSWD }}
   when:
     - ansible_distribution == "CentOS"

#grant

 - name: GRANT
   shell: echo "GRANT SELECT,INSERT,UPDATE,DELETE ON guacamole.* TO 'guacamole'@'localhost';" | mysql -u{{ DBADMINUSER }} -p{{ DBADMINPASSWD }}
   when:
     - ansible_distribution != "CentOS"

 - name: GRANT
   shell: echo "GRANT SELECT,INSERT,UPDATE,DELETE ON guacamole.* TO 'guacamole'@'localhost';" | mysql -u{{ DBADMINUSER }} -p{{ DBADMINPASSWD }}
   when:
     - ansible_distribution == "CentOS"

# if debian version 8

 - name: DROP USER
   shell: "mysql -u{{ DBADMINUSER }} -p{{ DBADMINPASSWD }} guacamole < /usr/share/guacamole-auth-mysql/schema/001-create-schema.sql;"
   when: ansible_distribution_major_version == '8'

 - name: DROP USER
   shell: "mysql -u{{ DBADMINUSER }} -p{{ DBADMINPASSWD }} guacamole < /usr/share/guacamole-auth-mysql/schema/002-create-admin-user.sql;"
   when: ansible_distribution_major_version == '8'

 - name: DROP USER
   shell: "mysql -u{{ DBADMINUSER }} -p{{ DBADMINPASSWD }} guacamole < /usr/share/guacamole-auth-jdbc/mysql/schema/001-create-schema.sql;"
   when: ansible_distribution_major_version != '8'

 - name: DROP USER
   shell: "mysql -u{{ DBADMINUSER }} -p{{ DBADMINPASSWD }} guacamole < /usr/share/guacamole-auth-jdbc/mysql/schema/002-create-admin-user.sql;"
   when: ansible_distribution_major_version != '8'

#

 - name: SET
   shell: echo "SET @salt = UNHEX(SHA2(UUID(), 256)); UPDATE guacamole_user SET username='root', password_salt=@salt, password_hash=UNHEX(SHA2(CONCAT('{{ GUACAMOLE_ROOT_PASSWORD }}', HEX(@salt)), 256)) WHERE user_id=1;" | mysql -u{{ DBADMINUSER }} -p{{ DBADMINPASSWD }} guacamole

#

 - stat:
     path: /etc/guacamole/guacamole.properties.bak
   register: stfiletwo

 - name: shell
   shell: "/bin/cp /etc/guacamole/guacamole.properties.bak /etc/guacamole/guacamole.properties"
   when: stfiletwo.stat.isreg is defined

 - stat:
     path: /etc/guacamole/lib
   register: std

 - name: creat directory /guacamole/lib
   file:
     path: /etc/guacamole/lib
     state: directory
   when:
     - stfiletwo.stat.isdir is defined
     - ansible_distribution == "Rhel" or ansible_distribution == "CentOS"

 - name: shell
   shell: "/bin/cp -f /usr/share/java/mysql-connector-java.jar /etc/guacamole/lib/"
   when:
     - stfiletwo.stat.isdir is defined
     - ansible_distribution == "Rhel" or ansible_distribution == "CentOS"

 - name: shell
   shell: 'sed -i "s/^auth-provider:.*$/auth-provider: net.sourceforge.guacamole.net.auth.mysql.MySQLAuthenticationProvider/" /etc/guacamole/guacamole.properties'
   when:
     - ansible_distribution == "Debian" and ansible_distribution_major_version == "8"

#wirte in file guacamole.properties

 - name: Ensure SELinux is set to enforcing mode
   lineinfile:
     path: /etc/guacamole/guacamole.properties
     state: present
     line: '# Hostname and port of guacamole proxy'
   when:
     - ansible_distribution == "Debian" and ansible_distribution_major_version == "10"

 - name: Ensure SELinux is set to enforcing mode
   lineinfile:
     path: /etc/guacamole/guacamole.properties
     state: present
     line: 'guacd-hostname: localhost'
   when:
     - ansible_distribution == "Debian" and ansible_distribution_major_version == "10"

 - name: Ensure SELinux is set to enforcing mode
   lineinfile:
     path: /etc/guacamole/guacamole.properties
     state: present
     line: 'guacd-port:     4822'
   when:
     - ansible_distribution == "Debian" and ansible_distribution_major_version == "10"

 - name: Ensure SELinux is set to enforcing mode
   lineinfile:
     path: /etc/guacamole/guacamole.properties
     state: present
     line: '#Auth provider class (authenticates user/pass combination, needed if using the provided login screen)'
   when:
     - ansible_distribution == "Debian" and ansible_distribution_major_version == "10"

 - name: Ensure SELinux is set to enforcing mode
   lineinfile:
     path: /etc/guacamole/guacamole.properties
     state: present
     line: 'auth-provider: net.sourceforge.guacamole.net.basic.BasicFileAuthenticationProvider'
   when:
     - ansible_distribution == "Debian" and ansible_distribution_major_version == "10"

 - name: shell
   shell: "sed -i '/^basic-user-mapping.*$/d' /etc/guacamole/guacamole.properties"

 - name: shell
   shell: "sed -i '/^mysql-.*$/d' /etc/guacamole/guacamole.properties"

 - name: shell
   shell: "sed -i '/^lib-directory:.*$/d' /etc/guacamole/guacamole.properties"

 - name: shell
   shell: "sed -i '/^noauth-config:.*$/d' /etc/guacamole/guacamole.properties"

# wite in file /etc/guacamole/guacamole.properties for all

 - name: write in file
   lineinfile:
     dest: /etc/guacamole/guacamole.properties
     line: '{{ item }}'
   with_items:
    - 'mysql-disallow-simultaneous-connections: false'
    - 'mysql-disallow-duplicate-connections: false'
    - 'lib-directory: /var/lib/guacamole/classpath'
    - 'mysql-hostname: localhost'
    - 'mysql-port: 3306'
    - 'mysql-database: guacamole'
    - 'mysql-username: guacamole'
    - 'mysql-password: {{ ROOT_PASSWORD }}'

    # Setup Tomcat

 - name: shell
   shell: sed -i 's/Connector port="8080"/Connector port="8081"/' /etc/{{ V_TOMCAT_TEST_DEB }}/server.xml
   when:
     - ansible_distribution == "Debian"

 - name: shell
   shell: sed -i 's/Connector port="8080"/Connector port="8081"/' /etc/tomcat/server.xml
   when:
     - ansible_distribution == "CentOS"

 - name: shell
   shell: |
     xmlstarlet ed --inplace -s "Server[@port='8005']/Service[@name='Catalina']/Engine[@name='Catalina']/Host[@name='localhost']" -t elem -n "Valve className=\"org.apache.catalina.valves.RemoteAddrValve\" allow=\"{{ IP_ADDRESS }}\"" /etc/{{ V_TOMCAT_TEST_DEB }}/server.xml
   when:
     - INSTALL_TYPE == "p"
     - ansible_distribution == "Debian"

 - name: shell
   shell: |
     xmlstarlet ed --inplace -s "Server[@port='8005']/Service[@name='Catalina']/Engine[@name='Catalina']/Host[@name='localhost']" -t elem -n "Valve className=\"org.apache.catalina.valves.RemoteAddrValve\" allow=\"{{ IP_ADDRESS }}\"" /etc/tomcat/server.xml
   when:
     - INSTALL_TYPE == "p"
     - ansible_distribution == "CentOS"

 - name: shell
   shell: |
     xmlstarlet ed --inplace -s "Server[@port='8005']/Service[@name='Catalina']/Engine[@name='Catalina']/Host[@name='localhost']" -t elem -n "Valve className=\"org.apache.catalina.valves.RemoteAddrValve\" allow=\"{{ PULSEMAIN_IP }}\"" /etc/{{ V_TOMCAT_TEST_DEB }}/server.xml
   when:
     - INSTALL_TYPE != "p"
     - ansible_distribution == "Debian"

 - name: shell
   shell: |
     xmlstarlet ed --inplace -s "Server[@port='8005']/Service[@name='Catalina']/Engine[@name='Catalina']/Host[@name='localhost']" -t elem -n "Valve className=\"org.apache.catalina.valves.RemoteAddrValve\" allow=\"{{ PULSEMAIN_IP }}\"" /etc/tomcat/server.xml
   when:
     - INSTALL_TYPE != "p"
     - ansible_distribution == "CentOS"

 - name: service tomcat restart
   service:
     name: '{{ V_TOMCAT_TEST_DEB }}'
     state: restarted
   when:
     - ansible_distribution == "Debian"

 - name: service tomcat restart
   service:
     name: 'tomcat'
     state: restarted
   when:
     - ansible_distribution == "CentOS"

 - name: set GUACAMOLE_ROOT_PASSWORD
   set_fact:
     GUACAMOLE_APACHE_PATH: '/etc/apache2/conf-available/guacamole.conf'
   when:
     - ansible_distribution == "Debian" or ansible_distribution == "Mageia"

 - name: set GUACAMOLE_ROOT_PASSWORD
   set_fact:
     GUACAMOLE_APACHE_PATH: '/etc/httpd/conf.d/guacamole.conf'
   when:
     - ansible_distribution == "CentOS" or ansible_distribution == "Rhel"

#### IF INSTALL_TYPE=P
#######################################

 - name: set xmppDomain = 1
   set_fact:
     HOSTNAME_F: "wva-mmc.siveo.lan"
   when:
     - INSTALL_TYPE == "p"

 - name: copy
   copy:
     content: |
        <Location /guacamole/>
            SetEnvIf Referer "^https?://{{ SERVER_FQDN }}/" GUACAMOLE_ALLOWED
            Order Deny,Allow
            Deny from all
            Allow from env=GUACAMOLE_ALLOWED
            ProxyPass http://{{ HOSTNAME_F }}:8081/guacamole/ max=20 flushpackets=on
            ProxyPassReverse http://{{ HOSTNAME_F }}:8081/guacamole/
        </Location>
        <Location /guacamole/websocket-tunnel>
            SetEnvIf Referer "^https?://{{ SERVER_FQDN }}/" GUACAMOLE_ALLOWED
            Order Deny,Allow
            Deny from all
            Allow from env=GUACAMOLE_ALLOWED
            ProxyPass ws://{{ HOSTNAME_F }}:8081/guacamole/websocket-tunnel
            ProxyPassReverse ws://{{ HOSTNAME_F }}:8081/guacamole/websocket-tunnel
        </Location>
        SetEnvIf Request_URI "^/guacamole/tunnel" dontlog
        CustomLog  /var/log/apache2/guac.log common env=!dontlog
     dest: '{{ GUACAMOLE_APACHE_PATH }}'
   when:
     - ansible_distribution == "Debian"
     - INSTALL_TYPE == "p"

 - name: copy
   copy:
     content: |
        <Location /guacamole/>
            SetEnvIf Referer "^https?://{{ SERVER_FQDN }}/" GUACAMOLE_ALLOWED
            Order Deny,Allow
            Deny from all
            Allow from env=GUACAMOLE_ALLOWED
            ProxyPass http://{{ HOSTNAME_F }}:8081/guacamole/ max=20 flushpackets=on
            ProxyPassReverse http://{{ HOSTNAME_F }}:8081/guacamole/
        </Location>
        <Location /guacamole/websocket-tunnel>
            SetEnvIf Referer "^https?://{{ SERVER_FQDN }}/" GUACAMOLE_ALLOWED
            Order Deny,Allow
            Deny from all
            Allow from env=GUACAMOLE_ALLOWED
            ProxyPass ws://{{ HOSTNAME_F }}:8081/guacamole/websocket-tunnel
            ProxyPassReverse ws://{{ HOSTNAME_F }}:8081/guacamole/websocket-tunnel
        </Location>
        SetEnvIf Request_URI "^/guacamole/tunnel" dontlog
        CustomLog  /var/log/httpd/guac.log common env=!dontlog
     dest: '{{ GUACAMOLE_APACHE_PATH }}'
   when:
     - ansible_distribution == "CentOS"
     - INSTALL_TYPE == "p"

 - name: a2enconf
   shell: 'a2enconf guacamole.conf'
   when:
     - ansible_distribution == "CentOS"
     - INSTALL_TYPE == "p"

######## IF INSTALL_TYPE != P
##################################

#else INSTALL_TYPE != p
 - name: Ansible check file exists example.
   stat:
     path: /etc/apache2/conf-available
   register: file_details
   delegate_to: '{{ PULSEMAIN_IP }}'

 - name: Setup Apache write in {{ GUACAMOLE_APACHE_PATH }}
   copy:
     content: |
        <Location /guacamole-{{ XMPP_DOMAIN }}/>
            SetEnvIf Referer "^https?://{{ PULSEMAIN_FQDN }}/" GUACAMOLE_ALLOWED
            Order Deny,Allow
            Deny from all
            Allow from env=GUACAMOLE_ALLOWED
            ProxyPass http://{{ XMPP_DOMAIN }}:8081/guacamole/ max=20 flushpackets=on
            ProxyPassReverse http://{{ XMPP_DOMAIN }}:8081/guacamole/
            ProxyPassReverseCookiePath /guacamole/ /guacamole-{{ XMPP_DOMAIN}}/
        </Location>
        <Location /guacamole-{{ XMPP_DOMAIN }}/websocket-tunnel>
            SetEnvIf Referer "^https?://{{ PULSEMAIN_FQDN }}/" GUACAMOLE_ALLOWED
            Order Deny,Allow
            Deny from all
            Allow from env=GUACAMOLE_ALLOWED
            ProxyPass ws://{{ XMPP_DOMAIN }}:8081/guacamole/websocket-tunnel
            ProxyPassReverse ws://{{ XMPP_DOMAIN }}:8081/guacamole/websocket-tunnel
            ProxyPassReverseCookiePath /guacamole/ /guacamole-{{XMPP_DOMAIN }}/
        </Location>
     dest: '/etc/apache2/conf-available/guacamole.conf'
   delegate_to: '{{ PULSEMAIN_IP }}'
   when:
     - INSTALL_TYPE != "p"
     - ansible_distribution == "Debian" or ansible_distribution == "Mageia"
     - file_details.stat.exists

 - name: Ansible check file exists example.
   stat:
     path: /etc/httpd/conf.d
   register: file_details
   delegate_to: '{{ PULSEMAIN_IP }}'

 - name: Setup Apache write in {{ GUACAMOLE_APACHE_PATH }}
   copy:
     content: |
        <Location /guacamole-{{ XMPP_DOMAIN }}/>
            SetEnvIf Referer "^https?://{{ PULSEMAIN_FQDN }}/" GUACAMOLE_ALLOWED
            Order Deny,Allow
            Deny from all
            Allow from env=GUACAMOLE_ALLOWED
            ProxyPass http://{{ XMPP_DOMAIN }}:8081/guacamole/ max=20 flushpackets=on
            ProxyPassReverse http://{{ XMPP_DOMAIN }}:8081/guacamole/
            ProxyPassReverseCookiePath /guacamole/ /guacamole-{{ XMPP_DOMAIN}}/
        </Location>
        <Location /guacamole-{{ XMPP_DOMAIN }}/websocket-tunnel>
            SetEnvIf Referer "^https?://{{ PULSEMAIN_FQDN }}/" GUACAMOLE_ALLOWED
            Order Deny,Allow
            Deny from all
            Allow from env=GUACAMOLE_ALLOWED
            ProxyPass ws://{{ XMPP_DOMAIN }}:8081/guacamole/websocket-tunnel
            ProxyPassReverse ws://{{ XMPP_DOMAIN }}:8081/guacamole/websocket-tunnel
            ProxyPassReverseCookiePath /guacamole/ /guacamole-{{XMPP_DOMAIN }}/
        </Location>
     dest: '/etc/httpd/conf.d/guacamole.conf'
   delegate_to: '{{ PULSEMAIN_IP }}'
   ignore_errors: yes
   when:
     - INSTALL_TYPE != "p"
     - ansible_distribution == "CentOS" or ansible_distribution == "Rhel"
     - file_details.stat.exists

# if debian
 - name: Check if Service Exists
   stat: path=/etc/init.d/apache2
   register: service_status
   delegate_to: '{{ PULSEMAIN_IP }}'

 - name: restart systemdctl apache
   systemd:
     name: apache2
     state: restarted
   delegate_to: '{{ PULSEMAIN_IP }}'
   when:
     - ansible_distribution == "Debian" or ansible_distribution == "Mageia"
     - INSTALL_TYPE != "p"
     - service_status.stat.exists

 - name: Check if Service Exists
   stat: path=/etc/init.d/httpd
   register: service_status
   delegate_to: '{{ PULSEMAIN_IP }}'

 - name: restart systemdctl apache
   systemd:
     name: httpd
     state: restarted
   delegate_to: '{{ PULSEMAIN_IP }}'
   when:
     - ansible_distribution == "CentOS" or ansible_distribution == "Rhel"
     - INSTALL_TYPE != "p"
     - service_status.stat.exists
