---

 ####___________SYNCTHING_____________

#Ã§syncthing_device_id

 - name: shell syncthing
   shell: syncthing -home=/var/lib/syncthing/.config/syncthing/ -device-id
   register: deviceid

 - name: set LOCAL_DEVICE_ID
   set_fact:
     LOCAL_DEVICE_ID: "{{ deviceid.stdout }}"

#_syncthing_share_packages

 - name: shell stman
   shell: stman folder add --label packages --foldertype readonly /var/lib/pulse2/packages/ pulsemaster_packages
   ignore_errors: yes
   when:
     - SHARE_ADDED == '0'

 - name: shell stman
   shell: stman folder share pulsemaster_packages {{ LOCAL_DEVICE_ID }}
   ignore_errors: yes
   when:
     - SHARE_ADDED == '0'

 - pause:
     seconds: 20

 - name: set SHARE_ADDED
   set_fact:
     SHARE_ADDED: xmlstarlet sel -t -c "configuration/folder[@id='pulsemaster_packages']/device[@id='${LOCAL_DEVICE_ID}']" /var/lib/syncthing/.config/syncthing/config.xml |wc -c

 - name: shell xmlstarlet
   shell: '{{ SHARE_ADDED }}'
   register: xmlout

 - name: set LOCAL_DEVICE_ID
   set_fact:
     SHARE_ADDED: "{{ xmlout.stdout }}"

 - name: shell stman
   shell: stman folder unshare pulsemaster_packages {{ LOCAL_DEVICE_ID }}
   ignore_errors: yes
   when:
     - SHARE_ADDED == '0'

 - name: shell stman
   shell: stman folder share pulsemaster_packages {{ LOCAL_DEVICE_ID }}
   ignore_errors: yes
   when:
     - SHARE_ADDED == '0'

 - name: set SHARE_ADDED
   set_fact:
     SHARE_ADDED: xmlstarlet sel -t -c "configuration/folder[@id='pulsemaster_packages']/device[@id='${LOCAL_DEVICE_ID}']" /var/lib/syncthing/.config/syncthing/config.xml |wc -c

#_syncthing_share_bootmenus

 - name: shell stman
   shell: stman folder add --label bootmenus --foldertype readwrite /var/lib/pulse2/imaging/bootmenus/ pulsemaster_bootmenus
   ignore_errors: yes
   when:
     - SHARE_ADDED == '0'

 - name: shell stman
   shell: stman folder share pulsemaster_bootmenus {{ LOCAL_DEVICE_ID }}
   ignore_errors: yes
   when:
     - SHARE_ADDED == '0'

 - pause:
     seconds: 20

 - name: set SHARE_ADDED
   set_fact:
     SHARE_ADDED: xmlstarlet sel -t -c "configuration/folder[@id='pulsemaster_bootmenus']/device[@id='{{ LOCAL_DEVICE_ID }}']" /var/lib/syncthing/.config/syncthing/config.xml |wc -c

 - name: shell xmlstarlet
   shell: '{{ SHARE_ADDED }}'
   register: xmlout

 - name: set LOCAL_DEVICE_ID
   set_fact:
     SHARE_ADDED: "{{ xmlout.stdout }}"

 - name: shell stman
   shell: stman folder unshare pulsemaster_bootmenus {{ LOCAL_DEVICE_ID }}
   ignore_errors: yes
   when:
     - SHARE_ADDED == '0'

 - name: shell stman
   shell: stman folder share pulsemaster_bootmenus {{ LOCAL_DEVICE_ID }}
   ignore_errors: yes
   when:
     - SHARE_ADDED == '0'

 - name: set SHARE_ADDED
   set_fact:
     SHARE_ADDED: xmlstarlet sel -t -c "configuration/folder[@id='pulsemaster_bootmenus']/device[@id='{{ LOCAL_DEVICE_ID }}']" /var/lib/syncthing/.config/syncthing/config.xml |wc -c

#_syncthing_share_baseremoteagent

 - name: shell stman
   shell: stman folder add --label baseremoteagent --foldertype readonly /var/lib/pulse2/xmpp_baseremoteagent/ pulsemaster_baseremoteagent
   ignore_errors: yes
   when:
     - SHARE_ADDED == '0'

 - name: shell stman
   shell: stman folder share pulsemaster_baseremoteagent {{ LOCAL_DEVICE_ID }}
   ignore_errors: yes
   when:
     - SHARE_ADDED == '0'

 - pause:
     seconds: 20

 - name: set SHARE_ADDED
   set_fact:
     SHARE_ADDED: xmlstarlet sel -t -c "configuration/folder[@id='pulsemaster_baseremoteagent']/device[@id='${LOCAL_DEVICE_ID}']" /var/lib/syncthing/.config/syncthing/config.xml |wc -c

 - name: shell xmlstarlet
   shell: '{{ SHARE_ADDED }}'
   register: xmlout

 - name: set LOCAL_DEVICE_ID
   set_fact:
     SHARE_ADDED: "{{ xmlout.stdout }}"

 - name: shell stman
   shell: stman folder unshare pulsemaster_baseremoteagent {{ LOCAL_DEVICE_ID }}
   ignore_errors: yes
   when:
     - SHARE_ADDED == '0'

 - name: shell stman
   shell: stman folder share pulsemaster_baseremoteagent {{ LOCAL_DEVICE_ID }}
   ignore_errors: yes
   when:
     - SHARE_ADDED == '0'

 - name: set SHARE_ADDED
   set_fact:
     SHARE_ADDED: xmlstarlet sel -t -c "configuration/folder[@id='pulsemaster_baseremoteagent']/device[@id='${LOCAL_DEVICE_ID}']" /var/lib/syncthing/.config/syncthing/config.xml |wc -c

#_syncthing_share_pulsemaster_downloads

 - name: shell stman
   shell: stman folder add --label downloads --foldertype readonly /var/lib/pulse2/clients/ pulsemaster_downloads
   ignore_errors: yes
   when:
     - SHARE_ADDED == '0'

 - name: shell stman
   shell: stman folder share pulsemaster_downloads {{ LOCAL_DEVICE_ID }}
   ignore_errors: yes
   when:
     - SHARE_ADDED == '0'

 - pause:
     seconds: 20

 - name: set SHARE_ADDED
   set_fact:
     SHARE_ADDED: xmlstarlet sel -t -c "configuration/folder[@id='pulsemaster_downloads']/device[@id='${LOCAL_DEVICE_ID}']" /var/lib/syncthing/.config/syncthing/config.xml |wc -c

 - name: shell xmlstarlet
   shell: '{{ SHARE_ADDED }}'
   register: xmlout

 - name: set LOCAL_DEVICE_ID
   set_fact:
     SHARE_ADDED: "{{ xmlout.stdout }}"

 - name: shell stman
   shell: stman folder unshare pulsemaster_downloads {{ LOCAL_DEVICE_ID }}
   ignore_errors: yes
   when:
     - SHARE_ADDED == '0'

 - name: shell stman
   shell: stman folder share pulsemaster_downloads {{ LOCAL_DEVICE_ID }}
   ignore_errors: yes
   when:
     - SHARE_ADDED == '0'

 - name: set SHARE_ADDED
   set_fact:
     SHARE_ADDED: xmlstarlet sel -t -c "configuration/folder[@id='pulsemaster_downloads']/device[@id='${LOCAL_DEVICE_ID}']" /var/lib/syncthing/.config/syncthing/config.xml |wc -c

####FIN_sync_share

####Syncthing_depl write

 - name: set SYNCTHING_APACHE_PATH
   set_fact:
     SYNCTHING_APACHE_PATH: '/etc/apache2/conf-available/syncthing.conf'
   when:
     - ansible_distribution == "Debian" or ansible_distribution == "Mageia"

 - name: set SYNCTHING_APACHE_PATH
   set_fact:
     SYNCTHING_APACHE_PATH: '/etc/httpd/conf.d/syncthing.conf'
   when:
     - ansible_distribution == "CentOS" or ansible_distribution == "Rhel"

 - name: write in {{ SYNCTHING_APACHE_PATH }}
   lineinfile:
     line: "ProxyPass /syncthing-depl-{{ XMPP_DOMAIN }}/ http://{{ XMPP_DOMAIN }}/syncthing-depl/"
     dest: '{{ SYNCTHING_APACHE_PATH }}'

 - name: write in {{ SYNCTHING_APACHE_PATH }}
   lineinfile:
     line: "<Location /syncthing-depl-{{ XMPP_DOMAIN }}/>"
     dest: '{{ SYNCTHING_APACHE_PATH }}'

 - name: write in {{ SYNCTHING_APACHE_PATH }}
   lineinfile:
     line: "    ProxyPassReverse http://{{ XMPP_DOMAIN }}/syncthing-depl/"
     dest: '{{ SYNCTHING_APACHE_PATH }}'

 - name: write in {{ SYNCTHING_APACHE_PATH }}
   lineinfile:
     line: "    Require all granted"
     insertafter: "    ProxyPassReverse http://{{ XMPP_DOMAIN }}/syncthing-depl/"
     dest: '{{ SYNCTHING_APACHE_PATH }}'

 - name: write in {{ SYNCTHING_APACHE_PATH }}
   lineinfile:
     line: "</Location>"
     insertafter: "    Require all granted"
     dest: '{{ SYNCTHING_APACHE_PATH }}'

 - name: copy in {{ SYNCTHING_APACHE_PATH }}
   copy:
     content: |
        ProxyPass /syncthing/ http://localhost:8384/
        <Location /syncthing/>
           ProxyPassReverse http://localhost:8384/
           Require all granted
        </Location>
        ProxyPass /syncthing-depl/ http://localhost:8385/
        <Location /syncthing-depl/>
           ProxyPassReverse http://localhost:8385/
           Require all granted
        </Location>
        ProxyPass /syncthing-{{ XMPP_DOMAIN }}/ http://{{ XMPP_DOMAIN }}/syncthing/
        <Location /syncthing-{{ XMPP_DOMAIN }}/>
           ProxyPassReverse http://{{ XMPP_DOMAIN }}/syncthing/
           Require all granted
        </Location>
        ProxyPass /syncthing-depl-{{ XMPP_DOMAIN }}/ http://{{ XMPP_DOMAIN }}/syncthing-depl/
        <Location /syncthing-depl-{{ XMPP_DOMAIN }}/>
           ProxyPassReverse http://{{ XMPP_DOMAIN }}/syncthing-depl/
           Require all granted
        </Location>
     dest: '{{ SYNCTHING_APACHE_PATH }}'

#reload apache2.service

 - name: reload apache2
   systemd:
     name: apache2
     state: reloaded
   when:
     - ansible_distribution == "Debian" or ansible_distribution == 'Mageia'

 - name: set reload httpd
   systemd:
     name: httpd
     state: reloaded
   when:
     - ansible_distribution == "CentOS" or ansible_distribution == 'Rhel'

##_config_relay_server

 - name: shell grep
   shell: grep -cx "{{ IP_REMOTE_SERVER1 }} {{ XMPP_DOMAIN }}" /etc/hosts
   ignore_errors: yes
   register: grepres

 - debug:
     msg: '{{ grepres.stdout }}'

 - name: set RES_GREP
   set_fact:
     RES_GREP: '{{ grepres.stdout }}'

 - name: write in /etc/hosts
   lineinfile:
     line: '{{ IP_REMOTE_SERVER1 }} {{ XMPP_DOMAIN }}'
     dest: /etc/hosts
   when:
     - RES_GREP == "0"
 #2
 - name: shell grep
   shell: grep -cx "{{ IP_REMOTE_SERVER2 }} {{ XMPP_DOMAIN }}" /etc/hosts
   ignore_errors: yes
   register: grepres

 - name: set RES_GREP
   set_fact:
     RES_GREP: '{{ grepres.stdout }}'

 - name: write in /etc/hosts
   lineinfile:
     line: '{{ IP_REMOTE_SERVER2 }} {{ XMPP_DOMAIN }}'
     dest: /etc/hosts
   when:
     - RES_GREP == "0"

##_configure_glpi_multisite
##_configure_package_server_multisite

 # - name: set PACKAGESERVER_UUID
 #   set_fact:
 #     PACKAGESERVER_UUID: "uuidgen"
 #
 #   # Enable the Pulse MMC to listen from everywhere. Done on main Pulse server
 # - name: shell crudini
 #   shell: crudini --set /etc/mmc/agent/config.ini.local main host 0.0.0.0 && systemctl restart mmc-agent.service
 #
 #   # Insert multisite imaging server in Pulse imaging server database. Done on main Pulse server.
 # - name: shell mysql command
 #   shell: echo "INSERT INTO ImagingServer (name, url, fk_default_menu, packageserver_uuid, \'recursive\', associated, fk_language, fk_entity) VALUES ('{{ MULTISITE_ENTITY }}', 'https://{{ IP_REMOTE_SERVER1 }}:9990/imaging_api', 1, '{{ PACKAGESERVER_UUID }}', 1, 0, 1, 1);" | mysql -h {{ DBHOST }} -P {{ DBPORT }} -u{{ DBADMINUSER }} -p{{ DBADMINPASSWD }} imaging
 #
 # - name: shell mysql command
 #   shell: echo "INSERT INTO ImagingServer (name, url, fk_default_menu, packageserver_uuid, \'recursive\', associated, fk_language, fk_entity) VALUES ('{{ MULTISITE_ENTITY }}', 'https://{{ IP_REMOTE_SERVER2 }}:9990/imaging_api', 1, '{{ PACKAGESERVER_UUID }}', 1, 0, 1, 1);" | mysql -h {{ DBHOST }} -P {{ DBPORT }} -u{{ DBADMINUSER }} -p{{ DBADMINPASSWD }} imaging
 #
 #   # Create multisite imaging entity in Pulse imaging entities database. Done on main Pulse server
 # - name: shell mysql command
 #   shell: echo 'SELECT id FROM imaging.ImagingServer ORDER BY id DESC LIMIT 1'|mysql -h {{ DBHOST }} -P {{ DBPORT }} -u{{ DBADMINUSER }} -p{{ DBADMINPASSWD }} -s
 #   register: uuidimag
 #
 # - name: set UUID_IMAGING
 #   set_fact:
 #     UUID_IMAGING: UUID'{{ uuidimag.stdout }}'
 #
 # - name: shell mysql command
 #   shell: echo "SELECT id FROM {{ GLPI_DBNAME }}.glpi_entities WHERE name='{{ MULTISITE_ENTITY }}';" |mysql -h{{ GLPI_DBHOST}} -P {{ GLPI_DBPORT }} -u{{ GLPI_DBUSER }} -p{{ GLPI_DBPASSWD }} -s
 #   register: glpientity
 #
 # - name: set GLPI_ENTITY_ID
 #   set_fact:
 #     GLPI_ENTITY_ID: '{{ glpientity.stdout }}'
 #
 # - name: set UUID
 #   set_fact:
 #     UUID: UUID'{{ GLPI_ENTITY_ID }}'
 #
 # - name: shell mysql command
 #   shell: echo "INSERT INTO imaging.Entity (name, uuid, pxe_keymap) values ('{{ MULTISITE_ENTITY }}','{{ UUID }}','fr_FR');" | mysql -h {{ DBHOST }} -P {{ DBPORT }} -u{{ DBADMINUSER }} -p{{ DBADMINPASSWD }} imaging
 #
 #   # Register multisite package server in Pulse. Done on main Pulse server
 # - name: shell mysql command
 #   shell: echo 'SELECT id FROM imaging.Entity  ORDER BY id DESC LIMIT 1'|mysql -h {{ DBHOST }} -P {{ DBPORT }} -u{{ DBADMINUSER }} -p{{ DBADMINPASSWD }} -s
 #   register: idout
 #
 # - name: set ID
 #   set_fact:
 #     ID: '{{ idout.stdout }}'
 #
 # - name: shell mysql command
 #   shell: echo "UPDATE ImagingServer SET associated=1, fk_entity={{ ID }} WHERE packageserver_uuid='{{ PACKAGESERVER_UUID }}';"| mysql -h {{ DBHOST }} -P {{ DBPORT }} -u{{ DBADMINUSER }} -p{{ DBADMINPASSWD }} imaging
 #
 # - name: ssh restart pulse2-package-server
 #   shell: ssh {{ IP_REMOTE_SERVER1 }} systemctl restart pulse2-package-server
 #
 # - name: ssh restart pulse2-package-server
 #   shell: ssh {{ IP_REMOTE_SERVER2 }} systemctl restart pulse2-package-server
