---
####___________GUACAMOLE_____________
 - name: Get hostname
   shell: hostname -f
   register: result

 - name: set xmppDomain = 1
   set_fact:
     HOSTNAME_F: "{{ result.stdout }}"

 - name: set GUACAMOLE_ROOT_PASSWORD
   set_fact:
     GUACAMOLE_APACHE_PATH: '/etc/apache2/conf-available/guacamole.conf'
   when:
     - ansible_distribution == "Debian" or ansible_distribution == "Mageia"

 - name: set GUACAMOLE_ROOT_PASSWORD
   set_fact:
     GUACAMOLE_APACHE_PATH: '/etc/httpd/conf.d/guacamole.conf'
   when:
     - ansible_distribution == "CentOS"

 - name: set GUACAMOLE_ROOT_PASSWORD
   set_fact:
     GUACAMOLE_APACHE_PATH: '/etc/httpd/conf.d/guacamole.conf'
   when:
     - ansible_distribution == "Rhel"

 - name: Setup Apache write in {{ GUACAMOLE_APACHE_PATH }}
   copy:
     content: |
       <Location /guacamole/>
           SetEnvIf Referer "^https?://{{ SERVER_FQDN }}/" GUACAMOLE_ALLOWED
           Order Deny,Allow
           Deny from all
           Allow from env=GUACAMOLE_ALLOWED
           ProxyPass http://{{ HOSTNAME_F }}:8081/guacamole/ max=20 flushpackets=on
           ProxyPassReverse http://{{ HOSTNAME_F }}:8081/guacamole/
       </Location>
       <Location /guacamole/websocket-tunnel>
           SetEnvIf Referer "^https?://{{ SERVER_FQDN }}/" GUACAMOLE_ALLOWED
           Order Deny,Allow
           Deny from all
           Allow from env=GUACAMOLE_ALLOWED
           ProxyPass ws://{{ HOSTNAME_F }}:8081/guacamole/websocket-tunnel
           ProxyPassReverse ws://{{ HOSTNAME_F }}:8081/guacamole/websocket-tunnel
       </Location>
       SetEnvIf Request_URI "^/guacamole/tunnel\" dontlog
       CustomLog  /var/log/apache2/guac.log common env=!dontlog
     dest: '{{ GUACAMOLE_APACHE_PATH }}'
   when:
     - INSTALL_TYPE == "p"
     - ansible_distribution == "Debian" or ansible_distribution == "Mageia"

 - name: Setup Apache write in {{ GUACAMOLE_APACHE_PATH }}
   copy:
     content: |
       <Location /guacamole/>
           SetEnvIf Referer "^https?://{{ SERVER_FQDN }}/" GUACAMOLE_ALLOWED
           Order Deny,Allow
           Deny from all
           Allow from env=GUACAMOLE_ALLOWED
           ProxyPass http://{{ HOSTNAME_F }}:8081/guacamole/ max=20 flushpackets=on
           ProxyPassReverse http://{{ HOSTNAME_F }}:8081/guacamole/
       </Location>
       <Location /guacamole/websocket-tunnel>
           SetEnvIf Referer "^https?://{{ SERVER_FQDN }}/" GUACAMOLE_ALLOWED
           Order Deny,Allow
           Deny from all
           Allow from env=GUACAMOLE_ALLOWED
           ProxyPass ws://{{ HOSTNAME_F }}:8081/guacamole/websocket-tunnel
           ProxyPassReverse ws://{{ HOSTNAME_F }}:8081/guacamole/websocket-tunnel
       </Location>
       SetEnvIf Request_URI "^/guacamole/tunnel\" dontlog
       CustomLog  /var/log/httpd/guac.log common env=!dontlog
     dest: '{{ GUACAMOLE_APACHE_PATH }}'
   when:
     - INSTALL_TYPE == "p"
     - ansible_distribution == "CentOS" or ansible_distribution == "Rhel"

 - name: a2enconf
   shell: 'a2enconf guacamole.conf'
   when:
     - ansible_distribution == "CentOS"
     - INSTALL_TYPE == "p"

 # - name:
 #   systemd:
 #     name: apache2
 #     state: restarted
 #   when:
 #     - ansible_distribution == "Debian" or ansible_distribution == "Mageia"

 - name:
   systemd:
     name: httpd
     state: restarted
   when:
     - ansible_distribution == "CentOS" or ansible_distribution == "Rhel"
 #    # Setup Apache FOR PULSE PRINCIPALE /!\

 ####___________SYNCTHING_____________

#_syncthing

 - name: Get hostname
   shell: hostname -f
   register: result

 - name: set xmppDomain = 1
   set_fact:
     XMPP_DOMAIN: "{{ result.stdout }}"

 - name: set SYNCTHING_APACHE_PATH
   set_fact:
     SYNCTHING_APACHE_PATH: '/etc/apache2/conf-available/syncthing.conf'
   when:
     - ansible_distribution == "Debian" or ansible_distribution == "Mageia"

 - name: set SYNCTHING_APACHE_PATH
   set_fact:
     SYNCTHING_APACHE_PATH: '/etc/httpd/conf.d/syncthing.conf'
   when:
     - ansible_distribution == "CentOS" or ansible_distribution == "Rhel"

 - name: write in {{ SYNCTHING_APACHE_PATH }}
   lineinfile:
     line: "ProxyPass /syncthing-{{ XMPP_DOMAIN }}/ http://{{ XMPP_DOMAIN }}/syncthing/"
     dest: '{{ SYNCTHING_APACHE_PATH }}'

 - name: write in {{ SYNCTHING_APACHE_PATH }}
   lineinfile:
     line: "<Location /syncthing-{{ XMPP_DOMAIN }}/>"
     dest: '{{ SYNCTHING_APACHE_PATH }}'

 - name: write in {{ SYNCTHING_APACHE_PATH }}
   lineinfile:
     line: "    ProxyPassReverse http://{{ XMPP_DOMAIN }}/syncthing/"
     dest: '{{ SYNCTHING_APACHE_PATH }}'

 - name: write in {{ SYNCTHING_APACHE_PATH }}
   lineinfile:
     line: "    Require all granted"
     dest: '{{ SYNCTHING_APACHE_PATH }}'

 - name: write in {{ SYNCTHING_APACHE_PATH }}
   lineinfile:
     line: "</Location>"
     dest: '{{ SYNCTHING_APACHE_PATH }}'

 # - name:
 #   systemd:
 #     name: apache2
 #     state: restarted
 #   when:
 #     - ansible_distribution == "Debian" or ansible_distribution == "Mageia"

 - name:
   systemd:
     name: httpd
     state: restarted
   when:
     - ansible_distribution == "CentOS" or ansible_distribution == "Rhel"

#_syncthing_share_packages
 - name: shell
   shell: syncthing -home=/var/lib/syncthing/.config/syncthing/ -device-id
   register: deviceid

 - name: set LOCAL_DEVICE_ID
   set_fact:
     LOCAL_DEVICE_ID: "{{ deviceid.stdout }}"

 - name: shell
   shell: stman folder unshare pulsemaster_packages {{ LOCAL_DEVICE_ID }}
   when:
     - SHARE_ADDED == ''

 - name: shell
   shell: stman folder share pulsemaster_packages {{ LOCAL_DEVICE_ID }}
   when:
     - SHARE_ADDED == ''

 - pause:
     seconds: 20

 - name: set SHARE_ADDED
   set_fact:
     SHARE_ADDED: $(xmlstarlet sel -t -c "configuration/folder[@id='pulsemaster_packages']/device[@id='{{ LOCAL_DEVICE_ID }}']" /var/lib/syncthing/.config/syncthing/config.xml |wc -c)
   when:
     - SHARE_ADDED == ''

#_syncthing_share_bootmenus

 - name: shell
   shell: syncthing -home=/var/lib/syncthing/.config/syncthing/ -device-id
   register: deviceid

 - name: set LOCAL_DEVICE_ID
   set_fact:
     LOCAL_DEVICE_ID: "{{ deviceid.stdout }}"

 - name: shell
   shell: stman folder unshare pulsemaster_bootmenus {{ LOCAL_DEVICE_ID }}
   when:
     - SHARE_ADDED == ''

 - name: shell
   shell: stman folder share pulsemaster_bootmenus {{ LOCAL_DEVICE_ID }}
   when:
     - SHARE_ADDED == ''

 - pause:
     seconds: 20

 - name: set SHARE_ADDED
   set_fact:
     SHARE_ADDED: $(xmlstarlet sel -t -c "configuration/folder[@id='pulsemaster_bootmenus']/device[@id='{{ LOCAL_DEVICE_ID }}']" /var/lib/syncthing/.config/syncthing/config.xml |wc -c)
   when:
     - SHARE_ADDED == ''

#_syncthing_share_baseremoteagent

 - name: shell
   shell: syncthing -home=/var/lib/syncthing/.config/syncthing/ -device-id
   register: deviceid

 - name: set LOCAL_DEVICE_ID
   set_fact:
     LOCAL_DEVICE_ID: "{{ deviceid.stdout }}"

 - name: shell
   shell: stman folder unshare pulsemaster_baseremoteagent {{ LOCAL_DEVICE_ID }}
   when:
     - SHARE_ADDED == ''

 - name: shell
   shell: stman folder share pulsemaster_baseremoteagent {{ LOCAL_DEVICE_ID }}
   when:
     - SHARE_ADDED == ''

 - pause:
     seconds: 20

 - name: set SHARE_ADDED
   set_fact:
     SHARE_ADDED: $(xmlstarlet sel -t -c "configuration/folder[@id='pulsemaster_baseremoteagent']/device[@id='{{ LOCAL_DEVICE_ID }}']" /var/lib/syncthing/.config/syncthing/config.xml |wc -c)
   when:
     - SHARE_ADDED == ''

#_syncthing_share_pulsemaster_downloads

 - name: shell
   shell: syncthing -home=/var/lib/syncthing/.config/syncthing/ -device-id
   register: deviceid

 - name: set LOCAL_DEVICE_ID
   set_fact:
     LOCAL_DEVICE_ID: "{{ deviceid.stdout }}"

 - name: shell
   shell: stman folder unshare pulsemaster_downloads {{ LOCAL_DEVICE_ID }}
   when:
     - SHARE_ADDED == ''

 - name: shell
   shell: stman folder share pulsemaster_downloads {{ LOCAL_DEVICE_ID }}
   when:
     - SHARE_ADDED == ''

 - pause:
     seconds: 20

 - name: set SHARE_ADDED
   set_fact:
     SHARE_ADDED: $(xmlstarlet sel -t -c "configuration/folder[@id='pulsemaster_downloads']/device[@id='{{ LOCAL_DEVICE_ID }}']" /var/lib/syncthing/.config/syncthing/config.xml |wc -c)
   when:
     - SHARE_ADDED == ''

####FIN_sync_share

####Syncthing_depl write

 - name: set SYNCTHING_APACHE_PATH
   set_fact:
     SYNCTHING_APACHE_PATH: '/etc/apache2/conf-available/syncthing.conf'
   when:
     - ansible_distribution == "Debian" or ansible_distribution == "Mageia"

 - name: set SYNCTHING_APACHE_PATH
   set_fact:
     SYNCTHING_APACHE_PATH: '/etc/httpd/conf.d/syncthing.conf'
   when:
     - ansible_distribution == "CentOS" or ansible_distribution == "Rhel"

 - name: write in {{ SYNCTHING_APACHE_PATH }}
   lineinfile:
     line: "ProxyPass /syncthing-depl-{{ XMPP_DOMAIN }}/ http://{{ XMPP_DOMAIN }}/syncthing-depl/"
     dest: '{{ SYNCTHING_APACHE_PATH }}'

 - name: write in {{ SYNCTHING_APACHE_PATH }}
   lineinfile:
     line: "<Location /syncthing-depl-{{ XMPP_DOMAIN }}/>"
     dest: '{{ SYNCTHING_APACHE_PATH }}'

 - name: write in {{ SYNCTHING_APACHE_PATH }}
   lineinfile:
     line: "    ProxyPassReverse http://{{ XMPP_DOMAIN }}/syncthing-depl/"
     dest: '{{ SYNCTHING_APACHE_PATH }}'

 - name: write in {{ SYNCTHING_APACHE_PATH }}
   lineinfile:
     line: "    Require all granted"
     dest: '{{ SYNCTHING_APACHE_PATH }}'

 - name: write in {{ SYNCTHING_APACHE_PATH }}
   lineinfile:
     line: "</Location>"
     dest: '{{ SYNCTHING_APACHE_PATH }}'

#reload apache2.service

 - name: set SSH_COMMAND
   systemd:
     name: apache2
     state: reload
   when:
     - ansible_distribution == "Debian" or ansible_distribution == 'Mageia'

 - name: set SSH_COMMAND
   systemd:
     name: httpd
     state: reload
   when:
     - ansible_distribution == "CentOS" or ansible_distribution == 'Rhel'

##_config_relay_server

 - name: shell
   shell: if [ \"\$(grep -cx \"{{ IP_REMOTE_SERVER }} {{ XMPP_DOMAIN }}\" /etc/hosts)\" -eq 0 ]; then echo \"{{ IP_REMOTE_SERVER }} {{ XMPP_DOMAIN }}\" >> /etc/hosts; fi

##_config_relay_server
# Create the cluster for the remote site

 - name: set MAX_ID
   set_fact:
     MAX_ID: $(ssh {{ PULSEMAIN_IP }} "echo 'SELECT MAX(id) FROM cluster_ars;' | mysql -s xmppmaster")

 - name: set CLUSTER_ID
   set_fact:
     CLUSTER_ID: $((MAX_ID+1))

 - name: set SSH_COMMAND
   shell: echo \"INSERT INTO cluster_ars (id,name,description) VALUES ({{ CLUSTER_ID }},'{{ MULTISITE_ENTITY }}// /_','{{ MULTISITE_ENTITY }}');\" | mysql xmppmaster

##_config_relay_server
# Add the relayserver to the cluster

 - name: set MAX_ID
   set_fact:
     MAX_ID: $(ssh {{ PULSEMAIN_IP }} "echo 'SELECT MAX(id) FROM has_cluster_ars;' | mysql -s xmppmaster")

 - name: set RELAYSERVER_ID
   set_fact:
     RELAYSERVER_ID: $(ssh {{ PULSEMAIN_IP }} "echo \"SELECT id FROM relayserver WHERE nameserver='{{ XMPP_DOMAIN }}';\" | mysql -s xmppmaster")

 - name: set SSH_COMMAND
   shell: echo \"INSERT INTO has_cluster_ars (id,id_ars,id_cluster) VALUES ('$((MAX_ID+1))','{{ RELAYSERVER_ID }}','{{ CLUSTER_ID }}');\" | mysql xmppmaster

##_config_relay_server
# Create the substitutes configuration rules

 - name: set RELAYSERVER_ID
   set_fact:
     RELAYSERVER_ID: $(ssh {{ PULSEMAIN_IP }} "echo \"SELECT id FROM relayserver WHERE nameserver='{{ XMPP_DOMAIN }}';\" | mysql -s xmppmaster")

 - name: set SSH_COMMAND
   shell: echo \"INSERT INTO xmppmaster.substituteconf (type, jidsubtitute, relayserver_id) VALUES ('registration', 'master_reg@pulse', {{ RELAYSERVER_ID }});\" | mysql xmppmaster

 - name: set SSH_COMMAND
   shell: echo \"INSERT INTO xmppmaster.substituteconf (type, jidsubtitute, relayserver_id) VALUES ('inventory', 'master_inv@pulse', {{ RELAYSERVER_ID }});\" | mysql xmppmaster

 - name: set SSH_COMMAND
   shell: echo \"INSERT INTO xmppmaster.substituteconf (type, jidsubtitute, relayserver_id) VALUES ('assessor', 'master_asse@pulse', {{ RELAYSERVER_ID }});\" | mysql xmppmaster

 - name: set SSH_COMMAND
   shell: echo \"INSERT INTO xmppmaster.substituteconf (type, jidsubtitute, relayserver_id) VALUES ('subscription', 'master_subs@pulse', {{ RELAYSERVER_ID }});\" | mysql xmppmaster

 - name: set SSH_COMMAND
   shell: echo \"INSERT INTO xmppmaster.substituteconf (type, jidsubtitute, relayserver_id) VALUES ('logger', 'master_log@pulse', {{ RELAYSERVER_ID }});\" | mysql xmppmaster

 - name: set PUBKEY
   set_fact:
     PUBKEY: '(cat /root/.ssh/id_rsa.pub)'

 - name: shell
   shell: 'echo {{ PUBKEY }} >> /var/lib/pulse2/file-transfer/.ssh/authorized_keys'
