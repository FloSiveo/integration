##########################################################
#                 Install urbackup server                #
##########################################################

- name: BACKUP - Add the OS specific variables
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_os_family }}.yml"

- name: BACKUP - Define parameters for debian
  ansible.builtin.debconf:
    name: urbackup-server
    question: urbackup/backuppath
    vtype: string
    value: '/media/BACKUP/urbackup'
  when:
    - ansible_distribution == 'Debian'

- name: BACKUP - Install backup-server
  ansible.builtin.apt:
    state: latest
    pkg:
      - urbackup-server
  when:
    - ansible_distribution == 'Debian'

- name: BACKUP - Install backup-server
  ansible.builtin.yum:
    state: latest
    pkg:
      - urbackup-server
  when:
    - ansible_distribution == 'CentOS'

- name: BACKUP - Configure apache for pulse backup
  ansible.builtin.copy:
    src: urbackup.conf
    dest: '{{ APACHE_CONF_PATH }}/'
    mode: '0644'
  notify:
    - BACKUP - Restart apache

- name: BACKUP - Enable pulse backup configuration
  ansible.builtin.command: a2enconf urbackup
  notify:
    - BACKUP - Restart apache
  when:
    - ansible_distribution == 'Debian'

- name: BACKUP - Ensure urbackup is running
  ansible.builtin.systemd:
    name: urbackupsrv
    state: started
    enabled: yes
    masked: no
  when:
    - ansible_distribution == 'Debian'

- name: BACKUP - Ensure urbackup is running
  ansible.builtin.systemd:
    name: urbackup-server
    state: started
    enabled: yes
    masked: no
  when:
    - ansible_distribution == 'CentOS'
